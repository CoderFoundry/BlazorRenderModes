@using Server.Models;
@page "/movies/ssr"

@inject HttpClient Http

<h1 class="text-center mt-3 display-3">Popular Movies</h1>
<div class="container-xl">
@if (MovieResponse is null)
{
    <div class="h-100 d-flex flex-column gap-3 justify-content-center align-items-center">
        <h3>Loading...</h3>
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    
    <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-3 justify-content-center justify-content-xl-start">

        @foreach (var movie in MovieResponse.Results.Take(8))
        {
            <div class="col">
                <MovieCard PopularMovie="movie" UseJSForBtn="true" />
            </div>
        }

    </div>

    <MovieModalJS />
}

</div>

@code {
    private PopularMovieResponse? MovieResponse { get; set; }

    protected override async Task OnInitializedAsync()
    {
       // await Task.Delay(3000);
        MovieResponse = await Http.GetFromJsonAsync<PopularMovieResponse>("movie/popular");
    }
}
