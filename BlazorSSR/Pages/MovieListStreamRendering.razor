@using BlazorSSR.Models;
@page "/movies/stream"
@attribute [StreamRendering(true)]

@inject HttpClient Http

@if (MovieResponse is null)
{
    <div class="h-100 d-flex flex-column gap-3 justify-content-center align-items-center">
        <h3>Loading...</h3>
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <h1 class="text-center mt-5 display-3">Popular Movies</h1>
    <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-3 justify-content-center justify-content-xl-start">

        @foreach (var movie in MovieResponse.Results.Take(8))
        {
            <div class="col">
                <MovieCard PopularMovie="movie" UseJSForBtn="true" />
            </div>
        }

    </div>
}

<div class="modal" tabindex="-1" id="movie-modal">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-title"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-4">
                        <img class="img-fluid" id="modal-img"
                             src="" />
                    </div>
                    <div class="col-md-8">
                        <h3 class="display-6 fw-bold mb-0" id="modal-movie-title"></h3>
                        <span class="lead" id="modal-tagline"></span>
                        <div class="d-flex gap-1 my-3" id="modal-genres">
                        </div>
                        <h5 class="lead fw-bold pt-3 mt-3 border-top">Synopsis</h5>
                        <p id="modal-overview">
                            
                        </p>

                        <div class="row pt-3 mt-3 border-top">
                            <div class="col">
                                <h6>Ratings</h6>
                                <span id="modal-rating"></span>
                                <i class="bi bi-star-fill"></i>
                            </div>
                            <div class="col">
                                <h6>Release Date</h6>
                                <span id="modal-released"></span>
                                <i class="bi bi-calendar"></i>
                            </div>
                            <div class="col">
                                <h6>Budget</h6>
                                <span id="modal-budget"></span>
                                <i class="bi bi-bank2"></i>
                            </div>
                            <div class="col">
                                <h6>Runtime</h6>
                                <span id="modal-runtime"></span>
                                <i class="bi bi-clock"></i>
                            </div>
                        </div>

                        <h5 class="lead fw-bold my-3 pt-3 mt-3 border-top">Production Companies</h5>

                        <div class="row g-3 align-items-center" id="modal-production-logos"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer d-flex">
                <button type="button" class="btn btn-secondary me-auto" data-bs-dismiss="modal">Close</button>
                <a href="#" target="_blank" class="btn btn-warning" id="modal-imdb">View on IMDB</a>
                <a href="#" target="_blank" class="btn btn-primary" id="modal-link">Movie Home Page</a>
            </div>
        </div>
    </div>
</div>

@code {
    private PopularMovieResponse? MovieResponse { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(3000);
        MovieResponse = await Http.GetFromJsonAsync<PopularMovieResponse>("movie/popular");
    }
}
